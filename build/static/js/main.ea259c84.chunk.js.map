{"version":3,"sources":["components/fileUpload/fileUpload.module.css","pages/loadingPage/loadingPage.module.css","App.module.css","components/colorPicker/colorPicker.js","components/util.js","components/cladeRow/cladeRow.js","components/nameRow/nameRow.js","components/fileUpload/fileUpload.js","components/miscOptions/miscOptions.js","pages/uploadPage/uploadPage.js","services/treeGen.js","pages/resultsPage/resultsPage.js","pages/loadingPage/loadingPage.js","App.js","reportWebVitals.js","index.js","pages/resultsPage/resultPage.module.css","components/colorPicker/colorPicker.module.css"],"names":["module","exports","ColorPicker","index","color","setCladeProperties","React","useState","show","setShow","updateShow","className","colorPickerStyles","swatch","onClick","style","background","popover","cover","onChange","chosenColor","prev","hex","removeField","currentProperty","setProperties","setFieldValue","setTouched","length","Object","keys","newProperties","i","parseInt","property","setter","e","target","value","CladeRow","cladeProperties","clade","minDensity","maxDensity","minCoverage","maxCoverage","errors","touched","Form","Row","Col","xs","md","Control","type","placeholder","name","isValid","isInvalid","Feedback","NameRow","nameFrom","nameTo","nameMapping","setNameMapping","FileUpload","fieldName","setNwkFile","FileUploadStyles","files","multiple","error","MiscOptions","colorDelineator","colorDelineatorValue","offset","offsetValue","rootOn","rootOnValue","quotes","quotesValue","setColorDelineator","setOffset","setRootOn","setQuotes","handleChange","checked","Group","as","Label","aria-describedby","Text","id","muted","Check","label","feedback","CLADE","COLOR","MIN_DENSITY","MAX_DENSITY","MIN_COVERAGE","MAX_COVERAGE","NAME_FROM","NAME_TO","NWK_FILE","QUOTES","COLOR_DELINEATOR","COLOR_OFFSET","ROOT_ON","UploadPage","setResults","schemaBase","useRef","yup","typeError","required","matches","excludeEmptyString","positive","min","max","history","useHistory","newNameMapping","0","1","2","3","4","5","nwkFile","schema","setSchema","addField","currentIndex","current","addNameMapField","useEffect","reduce","prevVal","inputType","includes","submitForm","setSubmitting","values","console","log","data","FormData","append","JSON","stringify","colorOffset","push","axios","post","service","then","result","validationSchema","initialValues","currVal","key","onSubmit","handleSubmit","isSubmitting","Container","map","Button","variant","disabled","SvgTree","tree","src","btoa","Details","coverageDetails","showCoverage","setShowCoverage","ResultPageStyles","overlay","aria-controls","aria-expanded","Collapse","in","textContainer","val","idx","text","ResultsPage","results","errorText","errorMsg","split","errorContainer","ReactHtmlParser","slice","LoadingPage","baseText","setText","setInterval","concat","LoadingPageStyles","container","spinner","Spinner","animation","role","App","basename","to","textDecoration","AppStyles","title","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ea259c84.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"files\":\"fileUpload_files__3hlEX\",\"color\":\"fileUpload_color__3NmOi\",\"error\":\"fileUpload_error__2O3UN\",\"error_text\":\"fileUpload_error_text__1Lj4l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"loadingPage_container__QqvoI\",\"spinner\":\"loadingPage_spinner__1M5fI\",\"text\":\"loadingPage_text__2XKRt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__1ysuK\"};","import React from \"react\";\r\nimport { ChromePicker } from \"react-color\";\r\nimport colorPickerStyles from \"./colorPicker.module.css\";\r\n\r\nfunction ColorPicker({ index, color, setCladeProperties }) {\r\n  const onChange = (chosenColor) => {\r\n    setCladeProperties((prev) => {\r\n      return { ...prev, [index]: { ...prev[index], color: chosenColor.hex } };\r\n    });\r\n  };\r\n  const [show, setShow] = React.useState(false);\r\n  const updateShow = () => setShow(!show);\r\n  return (\r\n    <div>\r\n      <div className={colorPickerStyles.swatch} onClick={updateShow}>\r\n        <div\r\n          className={colorPickerStyles.color}\r\n          style={{ background: color }}\r\n        />\r\n      </div>\r\n      {show ? (\r\n        <div className={colorPickerStyles.popover}>\r\n          <div className={colorPickerStyles.cover} onClick={updateShow} />\r\n          <ChromePicker color={color} onChange={onChange} />\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ColorPicker;\r\n","export const removeField = (\r\n  index,\r\n  currentProperty,\r\n  setProperties,\r\n  setFieldValue,\r\n  setTouched\r\n) => {\r\n  return () => {\r\n    const length = Object.keys(currentProperty).length;\r\n    let newProperties = {\r\n      ...currentProperty,\r\n    };\r\n    for (\r\n      let i = parseInt(index);\r\n      i < Object.keys(currentProperty).length - 1;\r\n      i++\r\n    ) {\r\n      newProperties[i] = { ...newProperties[i + 1] };\r\n      for (const property of Object.keys(newProperties[i]))\r\n        setFieldValue(`${property}${i}`, newProperties[i][property]);\r\n    }\r\n    delete newProperties[length - 1];\r\n    setTouched({});\r\n    setProperties(newProperties);\r\n  };\r\n};\r\n\r\nexport const onChange = (index, property, setter, setFieldValue) => {\r\n  return (e) => {\r\n    setFieldValue(`${property}${index}`, e.target.value);\r\n    setter((prev) => {\r\n      return {\r\n        ...prev,\r\n        [index]: { ...prev[index], [property]: e.target.value },\r\n      };\r\n    });\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport ColorPicker from \"../../components/colorPicker/colorPicker\";\r\nimport { MdCancel } from \"react-icons/md\";\r\nimport { removeField, onChange } from \"../util\";\r\n\r\nconst CladeRow = ({\r\n  cladeProperties,\r\n  setCladeProperties,\r\n  index,\r\n  clade,\r\n  minDensity,\r\n  maxDensity,\r\n  minCoverage,\r\n  maxCoverage,\r\n  color,\r\n  setFieldValue,\r\n  errors,\r\n  touched,\r\n  setTouched,\r\n}) => {\r\n  return (\r\n    <Form.Row className=\"mb-2 mt-2\">\r\n      <Col xs={12} md={2}>\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder=\"Clade name\"\r\n          name={`${clade}${index}`}\r\n          value={cladeProperties[index][clade] || \"\"}\r\n          onChange={onChange(index, clade, setCladeProperties, setFieldValue)}\r\n          isValid={!errors[`${clade}${index}`] && touched[`${clade}${index}`]}\r\n          isInvalid={\r\n            !!errors[`${clade}${index}`] && touched[`${clade}${index}`]\r\n          }\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          {errors[`${clade}${index}`]}\r\n        </Form.Control.Feedback>\r\n      </Col>\r\n      <Col xs={12} md={1}>\r\n        <ColorPicker\r\n          index={index}\r\n          color={cladeProperties[index][color]}\r\n          setCladeProperties={setCladeProperties}\r\n        />\r\n        <Form.Control.Feedback>{errors.color}</Form.Control.Feedback>\r\n      </Col>\r\n      <Col xs={12} md={2}>\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder=\"Min Density\"\r\n          name={`${minDensity}${index}`}\r\n          value={cladeProperties[index][minDensity]}\r\n          onChange={onChange(\r\n            index,\r\n            minDensity,\r\n            setCladeProperties,\r\n            setFieldValue\r\n          )}\r\n          isValid={\r\n            !errors[`${minDensity}${index}`] && touched[`${minDensity}${index}`]\r\n          }\r\n          isInvalid={\r\n            !!errors[`${minDensity}${index}`] &&\r\n            touched[`${minDensity}${index}`]\r\n          }\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          {errors[`${minDensity}${index}`]}\r\n        </Form.Control.Feedback>\r\n      </Col>\r\n      <Col xs={12} md={2}>\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder=\"Max Density\"\r\n          name={`${maxDensity}${index}`}\r\n          value={cladeProperties[index][maxDensity]}\r\n          onChange={onChange(\r\n            index,\r\n            maxDensity,\r\n            setCladeProperties,\r\n            setFieldValue\r\n          )}\r\n          isValid={\r\n            !errors[`${maxDensity}${index}`] && touched[`${maxDensity}${index}`]\r\n          }\r\n          isInvalid={\r\n            !!errors[`${maxDensity}${index}`] &&\r\n            touched[`${maxDensity}${index}`]\r\n          }\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          {errors[`${maxDensity}${index}`]}\r\n        </Form.Control.Feedback>\r\n      </Col>\r\n\r\n      <Col xs={12} md={2}>\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder=\"Min Coverage\"\r\n          name={`${minCoverage}${index}`}\r\n          value={cladeProperties[index][minCoverage]}\r\n          onChange={onChange(\r\n            index,\r\n            minCoverage,\r\n            setCladeProperties,\r\n            setFieldValue\r\n          )}\r\n          isValid={\r\n            !errors[`${minCoverage}${index}`] &&\r\n            touched[`${minCoverage}${index}`]\r\n          }\r\n          isInvalid={\r\n            !!errors[`${minCoverage}${index}`] &&\r\n            touched[`${minCoverage}${index}`]\r\n          }\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          {errors[`${minCoverage}${index}`]}\r\n        </Form.Control.Feedback>\r\n      </Col>\r\n\r\n      <Col xs={12} md={2}>\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder=\"Max Coverage\"\r\n          name={`${maxCoverage}${index}`}\r\n          value={cladeProperties[index][maxCoverage]}\r\n          onChange={onChange(\r\n            index,\r\n            maxCoverage,\r\n            setCladeProperties,\r\n            setFieldValue\r\n          )}\r\n          isValid={\r\n            !errors[`${maxCoverage}${index}`] &&\r\n            touched[`${maxCoverage}${index}`]\r\n          }\r\n          isInvalid={\r\n            !!errors[`${maxCoverage}${index}`] &&\r\n            touched[`${maxCoverage}${index}`]\r\n          }\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          {errors[`${maxCoverage}${index}`]}\r\n        </Form.Control.Feedback>\r\n      </Col>\r\n      <Col xs={12} md={1}>\r\n        <MdCancel\r\n          onClick={removeField(\r\n            index,\r\n            cladeProperties,\r\n            setCladeProperties,\r\n            setFieldValue,\r\n            setTouched\r\n          )}\r\n        />\r\n      </Col>\r\n    </Form.Row>\r\n  );\r\n};\r\n\r\nexport default CladeRow;\r\n","import React from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport { MdCancel } from \"react-icons/md\";\r\nimport { removeField, onChange } from \"../util\";\r\n\r\nconst NameRow = ({\r\n  index,\r\n  nameFrom,\r\n  nameTo,\r\n  nameMapping,\r\n  setNameMapping,\r\n  setFieldValue,\r\n  errors,\r\n  touched,\r\n  setTouched,\r\n}) => {\r\n  return (\r\n    <Form.Row key={index} className=\"mb-2 mt-2\">\r\n      <Col xs={12} md={5}>\r\n        <Form.Control\r\n          type=\"text\"\r\n          name={`${nameFrom}${index}`}\r\n          isValid={\r\n            touched[`${nameFrom}${index}`] && !errors[`${nameFrom}${index}`]\r\n          }\r\n          isInvalid={\r\n            !!errors[`${nameFrom}${index}`] && touched[`${nameFrom}${index}`]\r\n          }\r\n          placeholder=\"Actual Clade Name\"\r\n          onChange={onChange(index, nameFrom, setNameMapping, setFieldValue)}\r\n          value={nameMapping[index][nameFrom] || \"\"}\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          {errors[`${nameFrom}${index}`]}\r\n        </Form.Control.Feedback>\r\n      </Col>\r\n      <Col xs={12} md={5}>\r\n        <Form.Control\r\n          type=\"text\"\r\n          name={`${nameTo}${index}`}\r\n          isValid={touched[`${nameTo}${index}`] && !errors[`${nameTo}${index}`]}\r\n          isInvalid={\r\n            !!errors[`${nameTo}${index}`] && touched[`${nameTo}${index}`]\r\n          }\r\n          placeholder=\"Desired Clade Name\"\r\n          onChange={onChange(index, nameTo, setNameMapping, setFieldValue)}\r\n          value={nameMapping[index][nameTo] || \"\"}\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          {errors[`${nameTo}${index}`]}\r\n        </Form.Control.Feedback>\r\n      </Col>\r\n      <Col xs={12} md={1}>\r\n        <MdCancel\r\n          onClick={removeField(\r\n            index,\r\n            nameMapping,\r\n            setNameMapping,\r\n            setFieldValue,\r\n            setTouched\r\n          )}\r\n        />\r\n      </Col>\r\n    </Form.Row>\r\n  );\r\n};\r\n\r\nexport default NameRow;\r\n","import React from \"react\";\r\nimport FileUploadStyles from \"./fileUpload.module.css\";\r\n\r\nfunction FileUpload({ fieldName, setNwkFile, setFieldValue, errors, touched }) {\r\n  const handleChange = (e) => {\r\n    setNwkFile(e.target.files[0]);\r\n    setFieldValue(fieldName, e.target.files[0]);\r\n  };\r\n\r\n  return (\r\n    <div className={`${FileUploadStyles.color} mr-4 ml-4`}>\r\n      <div className={FileUploadStyles.files}>\r\n        <label>Upload Your File </label>\r\n        <input\r\n          type=\"file\"\r\n          multiple={false}\r\n          className={\r\n            !!errors[fieldName] && touched[fieldName]\r\n              ? FileUploadStyles.error\r\n              : \"\"\r\n          }\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FileUpload;\r\n","import React from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nconst MiscOptions = ({\r\n  colorDelineator,\r\n  colorDelineatorValue,\r\n  offset,\r\n  offsetValue,\r\n  rootOn,\r\n  rootOnValue,\r\n  quotes,\r\n  quotesValue,\r\n  setColorDelineator,\r\n  setOffset,\r\n  setRootOn,\r\n  setQuotes,\r\n  setFieldValue,\r\n  errors,\r\n  touched,\r\n}) => {\r\n  const handleChange = (value, setter, setFieldValue) => {\r\n    return (e) => {\r\n      if (e.target.className === \"form-check-input\") {\r\n        setter(e.target.checked);\r\n        setFieldValue(value, e.target.checked);\r\n      } else {\r\n        setter(e.target.value);\r\n        setFieldValue(value, e.target.value);\r\n      }\r\n    };\r\n  };\r\n  return (\r\n    <Form.Group as={Col} xs={12} md={6}>\r\n      <Form.Label>Color Delineator</Form.Label>\r\n      <Form.Control\r\n        aria-describedby=\"colorDelineator\"\r\n        type=\"text\"\r\n        placeholder=\"Color Delineator\"\r\n        value={colorDelineator}\r\n        onChange={handleChange(\r\n          colorDelineatorValue,\r\n          setColorDelineator,\r\n          setFieldValue\r\n        )}\r\n        isValid={!errors[colorDelineatorValue] && touched[colorDelineatorValue]}\r\n        isInvalid={\r\n          !!errors[colorDelineatorValue] && touched[colorDelineatorValue]\r\n        }\r\n      />\r\n      <Form.Text id=\"colorDelineator\" muted>\r\n        Use \"color=\" for rapidNj and fastTree files, \"____color__\" for iqTree\r\n      </Form.Text>\r\n      <Form.Control.Feedback type=\"invalid\">\r\n        {errors[colorDelineatorValue]}\r\n      </Form.Control.Feedback>\r\n\r\n      <Form.Label>Color Offset</Form.Label>\r\n      <Form.Control\r\n        aria-describedby=\"colorOffset\"\r\n        type=\"text\"\r\n        placeholder=\"Offset\"\r\n        value={offset}\r\n        onChange={handleChange(offsetValue, setOffset, setFieldValue)}\r\n        isValid={!errors[offsetValue] && touched[offsetValue]}\r\n        isInvalid={!!errors[offsetValue] && touched[offsetValue]}\r\n      />\r\n      <Form.Text id=\"colorOffset\" muted>\r\n        Number of characters to skip from the back when extracting color code\r\n      </Form.Text>\r\n      <Form.Control.Feedback type=\"invalid\">\r\n        {errors[offsetValue]}\r\n      </Form.Control.Feedback>\r\n      <Form.Label>Root On</Form.Label>\r\n      <Form.Control\r\n        type=\"text\"\r\n        placeholder=\"Clade to Root On\"\r\n        value={rootOn}\r\n        onChange={handleChange(rootOnValue, setRootOn, setFieldValue)}\r\n        isValid={!errors[rootOnValue] && touched[rootOnValue]}\r\n        isInvalid={!!errors[rootOnValue] && touched[rootOnValue]}\r\n      />\r\n      <Form.Control.Feedback type=\"invalid\">\r\n        {errors[rootOnValue]}\r\n      </Form.Control.Feedback>\r\n      <Form.Check\r\n        type=\"checkbox\"\r\n        name={quotesValue}\r\n        label=\"Is Sequence Name Quoted?\"\r\n        checked={quotes}\r\n        onChange={handleChange(quotesValue, setQuotes, setFieldValue)}\r\n        isInvalid={!!errors[quotesValue]}\r\n        feedback={errors[quotesValue]}\r\n      />\r\n    </Form.Group>\r\n  );\r\n};\r\n\r\nexport default MiscOptions;\r\n","import React from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { MdAddBox } from \"react-icons/md\";\r\n\r\nimport * as service from \"../../services/treeGen\";\r\nimport CladeRow from \"../../components/cladeRow/cladeRow\";\r\nimport NameRow from \"../../components/nameRow/nameRow\";\r\nimport FileUpload from \"../../components/fileUpload/fileUpload\";\r\nimport MiscOptions from \"../../components/miscOptions/miscOptions\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst CLADE = \"clade\";\r\nconst COLOR = \"color\";\r\nconst MIN_DENSITY = \"minDensity\";\r\nconst MAX_DENSITY = \"maxDensity\";\r\nconst MIN_COVERAGE = \"minCoverage\";\r\nconst MAX_COVERAGE = \"maxCoverage\";\r\nconst NAME_FROM = \"nameFrom\";\r\nconst NAME_TO = \"nameTo\";\r\nconst NWK_FILE = \"nwkFile\";\r\nconst QUOTES = \"quotes\";\r\nconst COLOR_DELINEATOR = \"colorDelineator\";\r\nconst COLOR_OFFSET = \"colorOffset\";\r\nconst ROOT_ON = \"rootOn\";\r\n\r\nfunction UploadPage({ setResults }) {\r\n  const schemaBase = React.useRef({\r\n    [CLADE]: yup\r\n      .string()\r\n      .typeError(\"Clade must be a filled in\")\r\n      .required(\"Required\"),\r\n    [COLOR]: yup\r\n      .string()\r\n      .required()\r\n      .matches(/^#([a-fA-F0-9]{6}|[a-fA-F0-9]{3})/, {\r\n        excludeEmptyString: true,\r\n      }),\r\n    [MIN_DENSITY]: yup\r\n      .number()\r\n      .typeError(\"Min Density must be a number between 0 and 100\")\r\n      .required(\"Required\")\r\n      .positive()\r\n      .min(0, \"Number must more than 0%\")\r\n      .max(100, \"Number must be less than 100%\"),\r\n    [MAX_DENSITY]: yup\r\n      .number()\r\n      .typeError(\"Max Density must be a number between 0 and 100\")\r\n      .required(\"Required\")\r\n      .positive()\r\n      .min(0, \"Number must more than 0%\")\r\n      .max(100, \"Number must be less than 100%\"),\r\n    [MIN_COVERAGE]: yup\r\n      .number()\r\n      .typeError(\"Min Coverage must be a number between 0 and 100\")\r\n      .required(\"Required\")\r\n      .positive()\r\n      .min(0, \"Number must more than 0%\")\r\n      .max(100, \"Number must be less than 100%\"),\r\n    [MAX_COVERAGE]: yup\r\n      .number()\r\n      .typeError(\"Max Coverage must be a number between 0 and 100\")\r\n      .required(\"Required\")\r\n      .positive()\r\n      .min(0, \"Number must more than 0%\")\r\n      .max(100, \"Number must be less than 100%\"),\r\n    [NAME_FROM]: yup.string().typeError(\"Required\").required(\"Required\"),\r\n    [NAME_TO]: yup.string().typeError(\"Required\").required(\"Required\"),\r\n    [QUOTES]: yup.boolean(),\r\n    [COLOR_DELINEATOR]: yup.string().required(\"Required\"),\r\n    [COLOR_OFFSET]: yup\r\n      .number()\r\n      .typeError(\"Color Offset must be a number. Should be between -5,5\")\r\n      .required(\"Required\"),\r\n    [ROOT_ON]: yup.string().required(\"Required\"),\r\n    [NWK_FILE]: yup.mixed().required(\"Required\"),\r\n  });\r\n  const history = useHistory();\r\n\r\n  const newProperties = React.useRef({\r\n    [CLADE]: \"\",\r\n    [COLOR]: \"#eeaabb\",\r\n    [MIN_DENSITY]: \"\",\r\n    [MAX_DENSITY]: \"\",\r\n    [MIN_COVERAGE]: \"\",\r\n    [MAX_COVERAGE]: \"\",\r\n  });\r\n  const newNameMapping = React.useRef({ [NAME_FROM]: \"\", [NAME_TO]: \"\" });\r\n  const [cladeProperties, setCladeProperties] = React.useState({\r\n    0: {\r\n      clade: \"G_\",\r\n      color: \"#fdb3b3\",\r\n      minDensity: 0.1,\r\n      maxDensity: 1,\r\n      minCoverage: 0.6,\r\n      maxCoverage: 1,\r\n    },\r\n    1: {\r\n      clade: \"GH_\",\r\n      color: \"#feab8d\",\r\n      minDensity: 0.1,\r\n      maxDensity: 1,\r\n      minCoverage: 0.6,\r\n      maxCoverage: 1,\r\n    },\r\n    2: {\r\n      clade: \"GV_\",\r\n      color: \"#f08bb5\",\r\n      minDensity: 0.9,\r\n      maxDensity: 1,\r\n      minCoverage: 0.88,\r\n      maxCoverage: 1,\r\n    },\r\n    3: {\r\n      clade: \"GR_\",\r\n      color: \"#fe8d8d\",\r\n      minDensity: 0.9,\r\n      maxDensity: 1,\r\n      minCoverage: 0.85,\r\n      maxCoverage: 1,\r\n    },\r\n    4: {\r\n      clade: \"S_\",\r\n      color: \"#b3ffb3\",\r\n      minDensity: 0.9,\r\n      maxDensity: 1,\r\n      minCoverage: 0.5,\r\n      maxCoverage: 1,\r\n    },\r\n    5: {\r\n      clade: \"V_\",\r\n      color: \"#ffddff\",\r\n      minDensity: 0.9,\r\n      maxDensity: 1,\r\n      minCoverage: 0.5,\r\n      maxCoverage: 1,\r\n    },\r\n  });\r\n\r\n  const [nameMapping, setNameMapping] = React.useState({\r\n    0: { nameFrom: \"Gn_\", nameTo: \"G_\" },\r\n    1: { nameFrom: \"GRn_\", nameTo: \"GR_\" },\r\n    2: { nameFrom: \"GHn_\", nameTo: \"GH_\" },\r\n    3: { nameFrom: \"GVn_\", nameTo: \"GV_\" },\r\n  });\r\n  const [colorDelineator, setColorDelineator] = React.useState(\"color=\");\r\n  const [offset, setOffset] = React.useState(-1);\r\n  const [rootOn, setRootOn] = React.useState(\"S_\");\r\n  const [quotes, setQuotes] = React.useState(false);\r\n  const [nwkFile, setNwkFile] = React.useState(\"\");\r\n  const [schema, setSchema] = React.useState(yup.object());\r\n\r\n  const addField = (setFieldValue) => {\r\n    return () => {\r\n      const currentIndex = Object.keys(cladeProperties).length;\r\n      for (const property of Object.keys(\r\n        cladeProperties[currentIndex - 1] || {}\r\n      )) {\r\n        setFieldValue(\r\n          `${property}${currentIndex}`,\r\n          newProperties.current[property]\r\n        );\r\n      }\r\n      setCladeProperties((prev) => {\r\n        const newValue = {\r\n          ...prev,\r\n          [currentIndex]: newProperties.current,\r\n        };\r\n        return newValue;\r\n      });\r\n    };\r\n  };\r\n\r\n  const addNameMapField = (setFieldValue) => {\r\n    return () => {\r\n      const currentIndex = Object.keys(nameMapping).length;\r\n      for (const property of Object.keys(nameMapping[currentIndex - 1] || {})) {\r\n        setFieldValue(\r\n          `${property}${currentIndex}`,\r\n          newNameMapping.current[property]\r\n        );\r\n      }\r\n      setNameMapping((prev) => {\r\n        const newMapping = {\r\n          ...prev,\r\n          [currentIndex]: newNameMapping.current,\r\n        };\r\n        return newMapping;\r\n      });\r\n    };\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    setSchema(\r\n      yup.object(\r\n        Object.keys(schemaBase.current).reduce((prevVal, inputType) => {\r\n          if (\r\n            [\r\n              CLADE,\r\n              COLOR,\r\n              MIN_DENSITY,\r\n              MAX_DENSITY,\r\n              MIN_COVERAGE,\r\n              MAX_COVERAGE,\r\n            ].includes(inputType)\r\n          ) {\r\n            for (let i = 0; i < Object.keys(cladeProperties).length; i++) {\r\n              prevVal[`${inputType}${i}`] = schemaBase.current[inputType];\r\n            }\r\n          } else if ([NAME_FROM, NAME_TO].includes(inputType)) {\r\n            for (let i = 0; i < Object.keys(nameMapping).length; i++) {\r\n              prevVal[`${inputType}${i}`] = schemaBase.current[inputType];\r\n            }\r\n          } else {\r\n            prevVal[inputType] = schemaBase.current[inputType];\r\n          }\r\n          return prevVal;\r\n        }, {})\r\n      )\r\n    );\r\n  }, [cladeProperties, nameMapping]);\r\n\r\n  const submitForm = (setSubmitting, values) => {\r\n    console.log(\"values :>> \", values);\r\n\r\n    const data = new FormData();\r\n    data.append(\"file\", nwkFile);\r\n    data.append(\"clade_del\", JSON.stringify(cladeProperties));\r\n    data.append(\"name_mapping\", JSON.stringify(nameMapping));\r\n    data.append(\"color_delineator\", values.colorDelineator);\r\n    data.append(\"root_on\", values.rootOn);\r\n    data.append(\"quoted\", values.quotes);\r\n    data.append(\"offset\", values.colorOffset);\r\n    history.push(\"/loading\");\r\n    service.generateTree(data).then((result) => {\r\n      console.log(\"response :>> \", result);\r\n      history.push(\"/results\");\r\n      setResults(result.data);\r\n    });\r\n    setSubmitting(false);\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      validationSchema={schema}\r\n      initialValues={Object.values(nameMapping).reduce(\r\n        (prevVal, currVal, index) => {\r\n          for (const key of Object.keys(currVal)) {\r\n            prevVal[`${key}${index}`] = currVal[key];\r\n          }\r\n          return prevVal;\r\n        },\r\n        Object.values(cladeProperties).reduce(\r\n          (prevVal, currVal, index) => {\r\n            for (const key of Object.keys(currVal)) {\r\n              prevVal[`${key}${index}`] = currVal[key];\r\n            }\r\n            return prevVal;\r\n          },\r\n          {\r\n            [QUOTES]: quotes,\r\n            [COLOR_DELINEATOR]: colorDelineator,\r\n            [COLOR_OFFSET]: offset,\r\n            [ROOT_ON]: rootOn,\r\n            [NWK_FILE]: \"\",\r\n          }\r\n        )\r\n      )}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        submitForm(setSubmitting, values);\r\n      }}\r\n    >\r\n      {({\r\n        handleSubmit,\r\n        setFieldValue,\r\n        setTouched,\r\n        touched,\r\n        values,\r\n        isValid,\r\n        isSubmitting,\r\n        errors,\r\n      }) => {\r\n        return (\r\n          <Container>\r\n            <Form onSubmit={handleSubmit}>\r\n              <Form.Group as={Col} xs={12}>\r\n                <Form.Label>Clade Colouring Properties</Form.Label>\r\n                <Form.Row>\r\n                  <Form.Label as={Col} xs={12} md={2}>\r\n                    Clade\r\n                  </Form.Label>\r\n                  <Form.Label as={Col} xs={12} md={1}>\r\n                    Color\r\n                  </Form.Label>\r\n                  <Form.Label as={Col} xs={12} md={2}>\r\n                    Min Density\r\n                  </Form.Label>\r\n                  <Form.Label as={Col} xs={12} md={2}>\r\n                    Max Density\r\n                  </Form.Label>\r\n                  <Form.Label as={Col} xs={12} md={2}>\r\n                    Min Coverage\r\n                  </Form.Label>\r\n                  <Form.Label as={Col} xs={12} md={2}>\r\n                    Max Coverage\r\n                  </Form.Label>\r\n                </Form.Row>\r\n                {Object.keys(cladeProperties).map((index) => {\r\n                  return (\r\n                    <CladeRow\r\n                      key={index}\r\n                      cladeProperties={cladeProperties}\r\n                      setCladeProperties={setCladeProperties}\r\n                      index={index}\r\n                      clade={CLADE}\r\n                      minDensity={MIN_DENSITY}\r\n                      maxDensity={MAX_DENSITY}\r\n                      minCoverage={MIN_COVERAGE}\r\n                      maxCoverage={MAX_COVERAGE}\r\n                      color={COLOR}\r\n                      setFieldValue={setFieldValue}\r\n                      errors={errors}\r\n                      touched={touched}\r\n                      setTouched={setTouched}\r\n                    />\r\n                  );\r\n                })}\r\n                <Button onClick={addField(setFieldValue)} variant=\"light\">\r\n                  <MdAddBox /> Add Field\r\n                </Button>\r\n              </Form.Group>\r\n              <Form.Row>\r\n                <Form.Group as={Col} xs={12} md={6}>\r\n                  <Form.Label>Clade Name Remapping</Form.Label>\r\n                  <Form.Row>\r\n                    <Form.Label as={Col} xs={12} md={5}>\r\n                      From:\r\n                    </Form.Label>\r\n                    <Form.Label as={Col} xs={12} md={5}>\r\n                      To:\r\n                    </Form.Label>\r\n                  </Form.Row>\r\n                  {Object.keys(nameMapping).map((index) => {\r\n                    return (\r\n                      <NameRow\r\n                        key={index}\r\n                        index={index}\r\n                        nameFrom={NAME_FROM}\r\n                        nameTo={NAME_TO}\r\n                        nameMapping={nameMapping}\r\n                        setNameMapping={setNameMapping}\r\n                        setFieldValue={setFieldValue}\r\n                        errors={errors}\r\n                        touched={touched}\r\n                        setTouched={setTouched}\r\n                      />\r\n                    );\r\n                  })}\r\n                  <Button\r\n                    onClick={addNameMapField(setFieldValue)}\r\n                    variant=\"light\"\r\n                  >\r\n                    <MdAddBox /> Add Field\r\n                  </Button>\r\n                </Form.Group>\r\n                <MiscOptions\r\n                  colorDelineatorValue={COLOR_DELINEATOR}\r\n                  colorDelineator={colorDelineator}\r\n                  offsetValue={COLOR_OFFSET}\r\n                  offset={offset}\r\n                  rootOnValue={ROOT_ON}\r\n                  rootOn={rootOn}\r\n                  quotesValue={QUOTES}\r\n                  quotes={quotes}\r\n                  setColorDelineator={setColorDelineator}\r\n                  setOffset={setOffset}\r\n                  setRootOn={setRootOn}\r\n                  setQuotes={setQuotes}\r\n                  setFieldValue={setFieldValue}\r\n                  errors={errors}\r\n                  touched={touched}\r\n                />\r\n              </Form.Row>\r\n              <FileUpload\r\n                fieldName={NWK_FILE}\r\n                setNwkFile={setNwkFile}\r\n                setFieldValue={setFieldValue}\r\n                errors={errors}\r\n                touched={touched}\r\n              />\r\n              <Button type=\"submit\" disabled={isSubmitting}>\r\n                {isSubmitting ? \"submit\" : `Submit`}\r\n              </Button>\r\n            </Form>\r\n          </Container>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport default UploadPage;\r\n","import axios from \"axios\";\r\nconst production =\r\n  \"https://mendel3.bii.a-star.edu.sg/METHODS/corona/current/cgi-bin/phyloTree/cgi_tree.py\";\r\n\r\n// const test = \"http://localhost:8000/cgi-bin/cgi_tree.py\";\r\n\r\nexport const generateTree = (data) => {\r\n  // return axios.post(test, data);\r\n  return axios.post(production, data);\r\n};\r\n","import React from \"react\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport Collapse from \"react-bootstrap/Collapse\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport ResultPageStyles from \"./resultPage.module.css\";\r\n\r\nfunction SvgTree({ tree }) {\r\n  return (\r\n    <div>\r\n      <img src={`data:image/svg+xml;base64,${btoa(tree)}`} />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Details({ coverageDetails }) {\r\n  const [showCoverage, setShowCoverage] = React.useState(false);\r\n  return (\r\n    <div className={ResultPageStyles.overlay}>\r\n      <Button\r\n        variant=\"outline-light\"\r\n        onClick={() => setShowCoverage(!showCoverage)}\r\n        aria-controls=\"coverage-collapse\"\r\n        aria-expanded={showCoverage}\r\n      >\r\n        Show Details\r\n      </Button>\r\n      <Collapse in={showCoverage}>\r\n        <div className={ResultPageStyles.textContainer}>\r\n          {coverageDetails.map((val, idx) => (\r\n            <p key={idx} className={ResultPageStyles.text}>\r\n              {val}\r\n            </p>\r\n          ))}\r\n        </div>\r\n      </Collapse>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ResultsPage({ results }) {\r\n  console.log(\"results :>> \", results);\r\n  if (!results) {\r\n    return (\r\n      <div className={ResultPageStyles.errorText}>Nothing to see here</div>\r\n    );\r\n  }\r\n  if (results.error) {\r\n    const errorMsg = results.error\r\n      .split(\"\\n\")\r\n      .map((val) => <div className={ResultPageStyles.errorText}>{val}</div>);\r\n    return <div className={ResultPageStyles.errorContainer}>{errorMsg}</div>;\r\n  }\r\n  if (typeof results === \"string\") {\r\n    return <div>{ReactHtmlParser(results)}</div>;\r\n  }\r\n\r\n  const coverageDetails = [\r\n    results[0].split(\"\\n\")[1],\r\n    ...results[0].split(\"\\n\").slice(3),\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Details coverageDetails={coverageDetails} />\r\n      <SvgTree tree={results[1][0]} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ResultsPage;\r\n","import React from \"react\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nimport LoadingPageStyles from \"./loadingPage.module.css\";\r\n\r\nconst LoadingPage = () => {\r\n  const baseText = \"This will take a while! Grab some Coffee\";\r\n  const [text, setText] = React.useState(baseText);\r\n\r\n  React.useEffect(() => {\r\n    setInterval(() => {\r\n      setText((prev) => {\r\n        if (prev.length > 43) {\r\n          return baseText;\r\n        } else return prev.concat(\".\");\r\n      });\r\n    }, 2000);\r\n  }, []);\r\n  return (\r\n    <div className={LoadingPageStyles.container}>\r\n      <Col>\r\n        <div className={LoadingPageStyles.spinner}>\r\n          <Spinner as=\"span\" animation=\"border\" role=\"status\" variant=\"dark\" />\r\n        </div>\r\n        <p className={LoadingPageStyles.text}>{text}</p>\r\n      </Col>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingPage;\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nimport AppStyles from \"./App.module.css\";\nimport UploadPage from \"./pages/uploadPage/uploadPage\";\nimport ResultsPage from \"./pages/resultsPage/resultsPage\";\nimport LoadingPage from \"./pages/loadingPage/loadingPage\";\n\nfunction App() {\n  const [results, setResults] = React.useState(\"\");\n  return (\n    <Router basename=\"/METHODS/corona/current/phyloTreeMaker/build\">\n      <Link to=\"/\" style={{ textDecoration: \"none\" }}>\n        <h1 className={AppStyles.title}>Phylo Tree Maker</h1>\n      </Link>\n      <Switch>\n        <Route exact={true} path=\"/\">\n          <UploadPage setResults={setResults} />\n        </Route>\n        <Route exact={true} path=\"/results\">\n          <ResultsPage results={results} />\n        </Route>\n        <Route exact={true} path=\"/loading\">\n          <LoadingPage />\n        </Route>\n        <Route path=\"*\">\n          <div>404 Page not Found.</div>\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"resultPage_overlay__1Ld4b\",\"text\":\"resultPage_text__eJF0z\",\"textContainer\":\"resultPage_textContainer__3prwv\",\"errorContainer\":\"resultPage_errorContainer__3YJPd\",\"errorText\":\"resultPage_errorText__1wzKb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"color\":\"colorPicker_color__3CPJt\",\"swatch\":\"colorPicker_swatch__1XK93\",\"popover\":\"colorPicker_popover__1Ik58\",\"cover\":\"colorPicker_cover__2vwyA\"};"],"sourceRoot":""}